<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="pt-BR"><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="https://www.gpupo.com/feed.xml" rel="self" type="application/atom+xml" /><link href="https://www.gpupo.com/" rel="alternate" type="text/html" hreflang="pt-BR" /><updated>2024-04-29T16:06:29-03:00</updated><id>https://www.gpupo.com/feed.xml</id><title type="html">Gilmar Pupo</title><subtitle>Produtividade Corporativa e de Equipes, Inovação Tecnológica e Relevância no Mercado</subtitle><entry><title type="html">Lean- Nem Sempre Tão Enxuto Assim</title><link href="https://www.gpupo.com/artigos/leanh-nem-sempre-tao-enxuto-assim/" rel="alternate" type="text/html" title="Lean- Nem Sempre Tão Enxuto Assim" /><published>2024-04-25T20:49:00-03:00</published><updated>2024-04-25T20:49:00-03:00</updated><id>https://www.gpupo.com/artigos/leanh-nem-sempre-tao-enxuto-assim</id><content type="html" xml:base="https://www.gpupo.com/artigos/leanh-nem-sempre-tao-enxuto-assim/"><![CDATA[<div>
<p>
As empresas apresentam diferentes níveis de desenvolvimento, desde aquelas que estão dando seus primeiros passos até as altamente eficientes. Para interagir com essa diversidade, é crucial avaliar corretamente cada empresa antes de implementar mudanças. As estratégias e ferramentas a serem aplicadas
<strong>
variam
</strong>
muito de acordo com o estágio de desenvolvimento da empresa.
</p>
<h3>
Método estático x dinâmico
</h3>
<p>
Gerenciar uma empresa envolve resolver problemas e atingir metas. Para isso, precisamos identificar onde estamos falhando ou o que pode ser melhorado. Essas áreas de melhoria, que chamamos de lacunas, podem ser descobertas de maneira
<strong>
estática
</strong>
. Utilizar benchmarking para comparar nossos processos, seja internamente ou com outras empresas, é um método simples que facilita a rápida identificação de oportunidades significativas de melhoria.
</p>
<p>
Para empresas mais
<strong>
avançadas
</strong>
, onde fica cada vez mais difícil encontrar novas áreas para melhoria, um método mais dinâmico se faz necessário. Esse método pode envolver análises complexas e até modelos matemáticos para uma compreensão mais profunda dos processos e identificação de desperdícios. Essa abordagem
<strong>
dinâmica
</strong>
, conhecida como lean, foca na melhoria contínua e na eliminação de ineficiências.
</p>
<p>
É essencial não adotar novas tendências sem avaliar se são realmente pertinentes para o contexto específico da empresa. A implementação de métodos complexos, quando desnecessária, pode resultar em gastos e esforços supérfluos. É importante entender bem a situação da empresa e optar pela abordagem mais apropriada para promover melhorias. Isso não apenas economiza recursos, mas também direciona a empresa a alcançar suas metas de maneira mais efetiva e sustentável.
</p>
<p>
Apesar de sua proposta de enxugar processos, pode não ser tão "lean" assim se aplicado sem uma análise criteriosa das necessidades reais da empresa.
</p>
</div>]]></content><author><name></name></author><category term="artigos" /><summary type="html"><![CDATA[As empresas apresentam diferentes níveis de desenvolvimento, desde aquelas que estão dando seus primeiros passos até as altamente eficientes. Para interagir com essa diversidade, é crucial avaliar corretamente cada empresa antes de implementar mudanças. As estratégias e ferramentas a serem aplicadas variam muito de acordo com o estágio de desenvolvimento da empresa. Método estático x dinâmico Gerenciar uma empresa envolve resolver problemas e atingir metas. Para isso, precisamos identificar onde estamos falhando ou o que pode ser melhorado. Essas áreas de melhoria, que chamamos de lacunas, podem ser descobertas de maneira estática . Utilizar benchmarking para comparar nossos processos, seja internamente ou com outras empresas, é um método simples que facilita a rápida identificação de oportunidades significativas de melhoria. Para empresas mais avançadas , onde fica cada vez mais difícil encontrar novas áreas para melhoria, um método mais dinâmico se faz necessário. Esse método pode envolver análises complexas e até modelos matemáticos para uma compreensão mais profunda dos processos e identificação de desperdícios. Essa abordagem dinâmica , conhecida como lean, foca na melhoria contínua e na eliminação de ineficiências. É essencial não adotar novas tendências sem avaliar se são realmente pertinentes para o contexto específico da empresa. A implementação de métodos complexos, quando desnecessária, pode resultar em gastos e esforços supérfluos. É importante entender bem a situação da empresa e optar pela abordagem mais apropriada para promover melhorias. Isso não apenas economiza recursos, mas também direciona a empresa a alcançar suas metas de maneira mais efetiva e sustentável. Apesar de sua proposta de enxugar processos, pode não ser tão "lean" assim se aplicado sem uma análise criteriosa das necessidades reais da empresa.]]></summary></entry><entry><title type="html">Hendrix e o Foco no Valor ao Invés de Prazos e Orçamentos</title><link href="https://www.gpupo.com/artigos/hendrix-e-o-foco-no-valor-ao-inves-de-prazos-e-orcamentos/" rel="alternate" type="text/html" title="Hendrix e o Foco no Valor ao Invés de Prazos e Orçamentos" /><published>2024-04-10T17:28:00-03:00</published><updated>2024-04-10T17:28:00-03:00</updated><id>https://www.gpupo.com/artigos/hendrix-e-o-foco-no-valor-ao-inves-de-prazos-e-orcamentos</id><content type="html" xml:base="https://www.gpupo.com/artigos/hendrix-e-o-foco-no-valor-ao-inves-de-prazos-e-orcamentos/"><![CDATA[<div>
<p>
Nos últimos anos, observamos uma transformação significativa na maneira como as grandes empresas abordam o gerenciamento de projetos, especialmente no contexto de execução do planejamento estratégico. Tradicionalmente, a definição de sucesso em projetos estava fortemente atrelada ao cumprimento de orçamentos e cronogramas. Essa visão está se tornando obsoleta à medida que as organizações reconhecem que a conclusão de um projeto dentro do prazo e do orçamento estabelecidos não necessariamente se traduz em valor real para o negócio.
</p>
<h3>
Gestão de projeto direcionada ao valor
</h3>
<p>
A nova tendência em gerenciamento de projetos vai além dos parâmetros convencionais, como tempo e custo, e se concentra no valor que o projeto agrega ao negócio. Este conceito, conhecido como gestão de projeto direcionada ao valor, redefine o sucesso de um projeto não pela sua conclusão dentro de limites predefinidos, mas pelo impacto e valor que ele gera para a organização.
</p>
<p>
A
<strong>
gestão de projeto direcionada ao valor
</strong>
exige uma abordagem holística e estratégica. Isso envolve entender profundamente os objetivos do negócio e alinhar o gerenciamento do projeto com esses objetivos para garantir que os resultados finais contribuam significativamente para o sucesso da empresa. Sob essa perspectiva, a gestão de projetos transforma-se em um instrumento estratégico, em vez de um simples exercício de controle e monitoramento.
</p>
<h3>
Swing
</h3>
<p>
"Little Wing" de Jimi Hendrix é considerada uma das obras musicais mais significativas por vários motivos. Primeiramente, a composição demonstra a habilidade excepcional de Hendrix como guitarrista, combinando técnica, emoção e inovação. A música, embora breve, apresenta uma complexidade harmônica impressionante, misturando elementos do blues com nuances psicodélicas, o que reflete a capacidade de Hendrix de transcender gêneros musicais.
</p>
<p>
Integrar a filosofia de gestão de projetos focada em valor com o conceito de "swing" na música "Little Wing" de Jimi Hendrix pode parecer inusitado à primeira vista, mas ambos compartilham uma base comum de flexibilidade, inovação e expressão.
</p>
<p>
O "
<em>
swing
</em>
" em "
<em>
Little Wing
</em>
", com notas que desrespeitam o metrônomo,  é uma sensação que flui através da música, dando-lhe vida e movimento e gerando um valor único. Assim como o "swing" dá a "Little Wing" seu caráter único e emocional, a gestão de projeto direcionada ao valor adiciona uma
<strong>
dimensão dinâmica
</strong>
ao mundo corporativo. Essa gestão não se fixa rigidamente a prazos e orçamentos; ela se adapta, inova e se transforma para criar valor real e duradouro, assim como o ritmo fluido e adaptável de "Little Wing" que
<strong>
transcende a estrutura básica do tempo
</strong>
musical.
</p>
<p>
Em "Little Wing", Jimi Hendrix não se limita às convenções musicais, ele explora novas sonoridades, ritmos e harmonias para expressar seus sentimentos e visões. Da mesma forma, na gestão de projeto direcionada ao valor, os líderes de projeto transcendem as abordagens tradicionais para explorar novas estratégias e oportunidades que maximizam o valor para a empresa. Eles precisam ser inovadores, adaptáveis e sensíveis às mudanças no ambiente de negócios, assim como Hendrix foi com sua música.
</p>
<p>
A gestão de projetos direcionada ao valor e o "swing" de "Little Wing" compartilham a essência da adaptabilidade e da criação de impacto. Enquanto o "swing" de Hendrix transforma uma simples progressão de acordes em uma obra de arte envolvente e memorável, a gestão de projetos direcionada ao valor transforma o planejamento estratégico em iniciativas que geram resultados significativos e benefícios de longo prazo para o negócio.
</p>
<p>
Tanto na música quanto na gestão de projetos, a busca por
<strong>
valor
</strong>
e significado além das estruturas formais conduz a resultados excepcionais. A abordagem flexível e orientada ao valor na gestão de projetos reflete a liberdade expressiva e o impacto emocional que o "swing" de "Little Wing" tem na música, ilustrando como o dinamismo e a inovação são fundamentais para o sucesso e a ressonância, seja no domínio artístico ou empresarial.
</p>
</div>]]></content><author><name></name></author><category term="artigos" /><summary type="html"><![CDATA[Nos últimos anos, observamos uma transformação significativa na maneira como as grandes empresas abordam o gerenciamento de projetos, especialmente no contexto de execução do planejamento estratégico. Tradicionalmente, a definição de sucesso em projetos estava fortemente atrelada ao cumprimento de orçamentos e cronogramas. Essa visão está se tornando obsoleta à medida que as organizações reconhecem que a conclusão de um projeto dentro do prazo e do orçamento estabelecidos não necessariamente se traduz em valor real para o negócio. Gestão de projeto direcionada ao valor A nova tendência em gerenciamento de projetos vai além dos parâmetros convencionais, como tempo e custo, e se concentra no valor que o projeto agrega ao negócio. Este conceito, conhecido como gestão de projeto direcionada ao valor, redefine o sucesso de um projeto não pela sua conclusão dentro de limites predefinidos, mas pelo impacto e valor que ele gera para a organização. A gestão de projeto direcionada ao valor exige uma abordagem holística e estratégica. Isso envolve entender profundamente os objetivos do negócio e alinhar o gerenciamento do projeto com esses objetivos para garantir que os resultados finais contribuam significativamente para o sucesso da empresa. Sob essa perspectiva, a gestão de projetos transforma-se em um instrumento estratégico, em vez de um simples exercício de controle e monitoramento. Swing "Little Wing" de Jimi Hendrix é considerada uma das obras musicais mais significativas por vários motivos. Primeiramente, a composição demonstra a habilidade excepcional de Hendrix como guitarrista, combinando técnica, emoção e inovação. A música, embora breve, apresenta uma complexidade harmônica impressionante, misturando elementos do blues com nuances psicodélicas, o que reflete a capacidade de Hendrix de transcender gêneros musicais. Integrar a filosofia de gestão de projetos focada em valor com o conceito de "swing" na música "Little Wing" de Jimi Hendrix pode parecer inusitado à primeira vista, mas ambos compartilham uma base comum de flexibilidade, inovação e expressão. O " swing " em " Little Wing ", com notas que desrespeitam o metrônomo, é uma sensação que flui através da música, dando-lhe vida e movimento e gerando um valor único. Assim como o "swing" dá a "Little Wing" seu caráter único e emocional, a gestão de projeto direcionada ao valor adiciona uma dimensão dinâmica ao mundo corporativo. Essa gestão não se fixa rigidamente a prazos e orçamentos; ela se adapta, inova e se transforma para criar valor real e duradouro, assim como o ritmo fluido e adaptável de "Little Wing" que transcende a estrutura básica do tempo musical. Em "Little Wing", Jimi Hendrix não se limita às convenções musicais, ele explora novas sonoridades, ritmos e harmonias para expressar seus sentimentos e visões. Da mesma forma, na gestão de projeto direcionada ao valor, os líderes de projeto transcendem as abordagens tradicionais para explorar novas estratégias e oportunidades que maximizam o valor para a empresa. Eles precisam ser inovadores, adaptáveis e sensíveis às mudanças no ambiente de negócios, assim como Hendrix foi com sua música. A gestão de projetos direcionada ao valor e o "swing" de "Little Wing" compartilham a essência da adaptabilidade e da criação de impacto. Enquanto o "swing" de Hendrix transforma uma simples progressão de acordes em uma obra de arte envolvente e memorável, a gestão de projetos direcionada ao valor transforma o planejamento estratégico em iniciativas que geram resultados significativos e benefícios de longo prazo para o negócio. Tanto na música quanto na gestão de projetos, a busca por valor e significado além das estruturas formais conduz a resultados excepcionais. A abordagem flexível e orientada ao valor na gestão de projetos reflete a liberdade expressiva e o impacto emocional que o "swing" de "Little Wing" tem na música, ilustrando como o dinamismo e a inovação são fundamentais para o sucesso e a ressonância, seja no domínio artístico ou empresarial.]]></summary></entry><entry><title type="html">Desafios para estudantes de ETL</title><link href="https://www.gpupo.com/lessons/desafios-para-estudantes-de-etl/" rel="alternate" type="text/html" title="Desafios para estudantes de ETL" /><published>2023-06-26T00:00:00-03:00</published><updated>2023-06-26T00:00:00-03:00</updated><id>https://www.gpupo.com/lessons/gist-desafios-para-estudantes-de-etl</id><content type="html" xml:base="https://www.gpupo.com/lessons/desafios-para-estudantes-de-etl/"><![CDATA[<p>Gist ID: 7e934be8ddfbe7642a9ce43182f34684</p>

<p>Aqui está um exercício simples para um estudante iniciante em Python, envolvendo a manipulação de dados em que você partirá de um arquivo JSON multidimensional e gravará os dados em um arquivo CSV. Vamos supor que você tenha um arquivo JSON chamado “dados.json” com a seguinte estrutura:</p>

<pre><code class="language-json">{
  "pessoas": [
    {
      "nome": "João",
      "idade": 25,
      "cidade": "São Paulo"
    },
    {
      "nome": "Maria",
      "idade": 30,
      "cidade": "Rio de Janeiro"
    },
    {
      "nome": "Carlos",
      "idade": 35,
      "cidade": "Belo Horizonte"
    }
  ],
  "veiculos": [
    {
      "marca": "Toyota",
      "modelo": "Corolla",
      "ano": 2018
    },
    {
      "marca": "Honda",
      "modelo": "Civic",
      "ano": 2020
    },
    {
      "marca": "Volkswagen",
      "modelo": "Golf",
      "ano": 2017
    }
  ]
}
</code></pre>

<p>Neste exemplo, temos duas listas de objetos: “pessoas” e “veiculos”. Você deseja ler esses dados do arquivo JSON e gravá-los em um arquivo CSV separado para cada lista, onde cada linha representa um objeto e as colunas representam os atributos de cada objeto.</p>

<p>Aqui está um exemplo de código em Python que realiza essa tarefa:</p>

<pre><code class="language-python">import json
import csv

# Abre o arquivo JSON
with open('dados.json', 'r') as file:
    data = json.load(file)

# Processa cada lista do JSON e cria um arquivo CSV correspondente
for key, values in data.items():
    # Gera o nome do arquivo CSV baseado na chave do JSON
    csv_filename = key + '.csv'

    # Abre o arquivo CSV para escrita
    with open(csv_filename, 'w', newline='') as file:
        writer = csv.writer(file)

        # Obtém as chaves do primeiro item para escrever como cabeçalho do CSV
        headers = list(values[0].keys())
        writer.writerow(headers)

        # Escreve os dados de cada item no CSV
        for item in values:
            writer.writerow(list(item.values()))
            
    print(f"CSV '{csv_filename}' gerado com sucesso!")

</code></pre>

<p>Após executar esse código, ele lerá os dados do arquivo JSON, criará dois arquivos CSV: “pessoas.csv” e “veiculos.csv”.</p>]]></content><author><name></name></author><category term="gist" /><summary type="html"><![CDATA[Gist ID: 7e934be8ddfbe7642a9ce43182f34684]]></summary></entry><entry><title type="html">Uso de distância de Levenshtein para calcular a similaridade entre as categorias entre dois arquivos CSV</title><link href="https://www.gpupo.com/lessons/uso-de-distancia-de-levenshtein-para-calcular-a-similaridade-entre-as-categorias-entre-dois-arquivos-csv/" rel="alternate" type="text/html" title="Uso de distância de Levenshtein para calcular a similaridade entre as categorias entre dois arquivos CSV" /><published>2023-06-17T00:00:00-03:00</published><updated>2023-06-17T00:00:00-03:00</updated><id>https://www.gpupo.com/lessons/gist-uso-de-distancia-de-levenshtein-para-calcular-a-similaridade-entre-as-categorias-entre-dois-arquivos-csv</id><content type="html" xml:base="https://www.gpupo.com/lessons/uso-de-distancia-de-levenshtein-para-calcular-a-similaridade-entre-as-categorias-entre-dois-arquivos-csv/"><![CDATA[<p>Gist ID: 15d7634f81ced00d26423841bac9efc3</p>

<pre><code class="language-python">import csv
import Levenshtein

"""
O script tem como objetivo encontrar a categoria mais similar 
para cada categoria presente no arquivo "categorias.csv" com base
nas categorias do arquivo "categorias_native.csv". 

Ele utiliza a distância de Levenshtein para calcular 
a similaridade entre as categorias.
"""

def encontrar_categoria_similar(categoria, categorias_native):
    melhor_similaridade = 0
    melhor_categoria = None

    for linha in categorias_native:
        similiaridade = Levenshtein.ratio(categoria, linha[2])
        if similiaridade &gt; melhor_similaridade:
            melhor_similaridade = similiaridade
            melhor_categoria = linha

    return melhor_categoria

"""
O script começa carregando as categorias do arquivo "categorias_native.csv" 
em uma lista chamada categorias_native. 

Em seguida, abre o arquivo "categorias.csv" para leitura e 
o arquivo de saída "resultado.csv" para escrita.
"""

arquivo_categorias_native = 'categorias_native.csv'
arquivo_categorias_foreigner = 'data/categorias.csv'
arquivo_saida = 'resultado.csv'

# Carregar as categorias do arquivo categorias_native.csv

categorias_native = []
with open(arquivo_categorias_native, 'r') as arquivo_native:
    leitor_native = csv.reader(arquivo_native)
    next(leitor_native)  # Ignorar o cabeçalho
    for linha in leitor_native:
        categorias_native.append(linha)

"""
O cabeçalho do arquivo de saída é composto pelo cabeçalho original 
do arquivo "categorias.csv" acrescido das colunas "Categoria Predict ID" e "Categoria Predict Breadcrumb". 
Essas colunas armazenarão o ID e o breadcrumb da categoria mais similar encontrada.
Abrir o arquivo de categorias.csv para leitura e o arquivo de saída para escrita
"""

with open(arquivo_categorias_foreigner, 'r') as arquivo_categorias_foreigner, open(arquivo_saida, 'w', newline='') as arquivo_saida:
    leitor_categorias = csv.reader(arquivo_categorias_foreigner)
    escritor_saida = csv.writer(arquivo_saida)
    cabecalho_saida = next(leitor_categorias) + ['Categoria Predict ID', 'Categoria Predict Breadcrumb']
    escritor_saida.writerow(cabecalho_saida)
"""
O script itera pelas linhas do arquivo "categorias.csv". 
Para cada linha, chama a função encontrar_categoria_similar passando a categoria como argumento. 
A função retorna a categoria mais similar encontrada, juntamente com seu ID e breadcrumb correspondentes.
A linha de saída é composta pelos valores da linha original do arquivo "categorias.csv" 
acrescidos dos valores do ID e breadcrumb da categoria mais similar. 
Essa linha é escrita no arquivo de saída.
Após processar todas as linhas do arquivo "categorias.csv", o script exibe uma mensagem 
indicando a conclusão do processo e o arquivo "resultado.csv" onde os resultados foram gravados.

A função encontrar_categoria_similar recebe uma categoria como entrada e percorre todas 
as linhas das categorias presentes em "categorias_native.csv". 
Para cada linha, é calculada a similaridade usando a função Levenshtein.ratio da biblioteca Levenshtein. 
A categoria com a maior similaridade é armazenada juntamente com o valor de similaridade correspondente.
"""
    for linha in leitor_categorias:
        categoria = linha[0]
        categoria_correspondente = encontrar_categoria_similar(categoria, categorias_native)
        linha_saida = linha + [categoria_correspondente[1], categoria_correspondente[2]]
        escritor_saida.writerow(linha_saida)

print("Processo concluído. Resultado gravado em", arquivo_saida)
</code></pre>]]></content><author><name></name></author><category term="gist" /><summary type="html"><![CDATA[Gist ID: 15d7634f81ced00d26423841bac9efc3]]></summary></entry><entry><title type="html">Quando você tem um arquivo CSV muito grande e que gostaria de uma amostragem de linhas aleatórias, esse script pode te ajudar</title><link href="https://www.gpupo.com/lessons/quando-voce-tem-um-arquivo-csv-muito-grande-e-que-gostaria-de-uma-amostragem-de-linhas-aleatorias-esse-script-pode-te-ajudar/" rel="alternate" type="text/html" title="Quando você tem um arquivo CSV muito grande e que gostaria de uma amostragem de linhas aleatórias, esse script pode te ajudar" /><published>2023-06-14T00:00:00-03:00</published><updated>2023-06-14T00:00:00-03:00</updated><id>https://www.gpupo.com/lessons/gist-quando-voce-tem-um-arquivo-csv-muito-grande-e-que-gostaria-de-uma-amostragem-de-linhas-aleatorias-esse-script-pode-te-ajudar</id><content type="html" xml:base="https://www.gpupo.com/lessons/quando-voce-tem-um-arquivo-csv-muito-grande-e-que-gostaria-de-uma-amostragem-de-linhas-aleatorias-esse-script-pode-te-ajudar/"><![CDATA[<p>Gist ID: 33b266be0830f76cd3200866788404df</p>

<pre><code class="language-python">import csv
import random
import sys
import os

"""
Quando você tem um arquivo CSV muito grande e que gostaria de uma amostragem de linhas aleatórias,
esse script pode te ajudar.

Gist: https://gist.github.com/gpupo/33b266be0830f76cd3200866788404df

"""

def gerar_amostra_csv(caminho_arquivo_original, caminho_arquivo_amostra, tamanho_amostra):
    """
    Gera uma amostra aleatória de um arquivo CSV.

    Args:
        caminho_arquivo_original (str): O caminho completo para o arquivo CSV original.
        caminho_arquivo_amostra (str): O caminho completo para o novo arquivo CSV de amostra a ser gerado.
        tamanho_amostra (int): O número de linhas que deseja incluir na amostra.
    """
    # Verificar se o arquivo original existe
    if not os.path.isfile(caminho_arquivo_original):
        print(f"O arquivo '{caminho_arquivo_original}' não existe.")
        return

    # Ler o arquivo CSV original e obter o número total de linhas
    with open(caminho_arquivo_original, 'r') as arquivo_original:
        leitor_csv = csv.reader(arquivo_original)
        linhas_originais = list(leitor_csv)
        numero_total_linhas = len(linhas_originais)

    # Verificar se o tamanho da amostra é válido
    if tamanho_amostra &gt; numero_total_linhas:
        print(f"O tamanho da amostra ({tamanho_amostra}) é maior do que o número total de linhas no arquivo original ({numero_total_linhas}).")
        return

    # Ignorar a primeira linha (header)
    indices_amostra = random.sample(range(1, numero_total_linhas), tamanho_amostra)
    
    # Criar o arquivo de amostra e escrever as linhas selecionadas
    with open(caminho_arquivo_amostra, 'w', newline='') as arquivo_amostra:
        escritor_csv = csv.writer(arquivo_amostra)
        
        # Incluir a primeira linha (header) na amostra
        escritor_csv.writerow(linhas_originais[0])

        for indice in indices_amostra:
            escritor_csv.writerow(linhas_originais[indice])

    print(f"Amostra gerada com sucesso e salva em '{caminho_arquivo_amostra}'.")


def main():
    # Verificar se os argumentos foram fornecidos corretamente na linha de comando
    if len(sys.argv) != 4:
        print("Uso: python gerador_amostra_csv.py [caminho_arquivo_original] [caminho_arquivo_amostra] [tamanho_amostra]")
        return

    caminho_origem = sys.argv[1]
    caminho_destino = sys.argv[2]
    quantidade_linhas_amostra = int(sys.argv[3])

    gerar_amostra_csv(caminho_origem, caminho_destino, quantidade_linhas_amostra)


if __name__ == '__main__':
    main()

</code></pre>]]></content><author><name></name></author><category term="gist" /><summary type="html"><![CDATA[Gist ID: 33b266be0830f76cd3200866788404df]]></summary></entry><entry><title type="html">Code is Poetry, Platão e a abordagem centrada no cliente</title><link href="https://www.gpupo.com/artigos/code-is-poetry,-platao-e-a-abordagem-centrada-no-cliente/" rel="alternate" type="text/html" title="Code is Poetry, Platão e a abordagem centrada no cliente" /><published>2023-06-01T11:34:00-03:00</published><updated>2023-06-01T11:34:00-03:00</updated><id>https://www.gpupo.com/artigos/code-is-poetry,-platao-e-a-abordagem-centrada-no-cliente</id><content type="html" xml:base="https://www.gpupo.com/artigos/code-is-poetry,-platao-e-a-abordagem-centrada-no-cliente/"><![CDATA[<div>
<p>
A frase "
<strong>
Code is Poetry
</strong>
", frequentemente usada para descrever o campo da programação e do desenvolvimento de software, simboliza a noção de que a criação de código pode ser vista como uma forma de arte e expressão criativa, assim como a poesia e quero vincular esse conceito à ideia de Platão sobre a
<strong>
vida ideal
</strong>
e também à
<strong>
abordagem centrada no cliente
</strong>
na gestão de projetos.
</p>
<p>
Para Platão, os valores fundamentais da justiça, sabedoria e cumprimento do dever eram vitais em todas as esferas da vida, incluindo o trabalho. "Code is Poetry" pode ser interpretado como um apelo aos profissionais de tecnologia para buscar excelência em seu campo, onde um código bem estruturado, elegante e eficiente pode ser paralelizado com a criação de um poema bem construído, transmitindo significado, beleza e clareza.
</p>
<figure class="slate-resizable-image-embed slate-image-embed__resize-full-width">
<img alt="No alt text provided for this image" data-media-urn="urn:li:digitalmediaAsset:D4D12AQECVrHwCFKpVg" src="https://media.licdn.com/dms/image/D4D12AQECVrHwCFKpVg/article-inline_image-shrink_400_744/0/1685619518349?e=1719446400&amp;v=beta&amp;t=tJl7z_KWfIrlYRhkGJwaWyJcCvWyoj-XGHkl9nUkM1Y" />
<figcaption>
Writing Poetry GIF by Kpop46776
</figcaption>
</figure>
<p>
Assim como a poesia tem a capacidade de comunicar emoções e ideias de maneira sucinta e poderosa, o código tem o potencial de
<strong>
criar soluções
</strong>
<strong>
inovadoras
</strong>
e
<strong>
eficazes
</strong>
para problemas complexos. Com uma abordagem criativa e detalhada, os programadores podem desenvolver programas e sistemas
<strong>
elegantes, funcionais e inspiradores
</strong>
.
</p>
<p>
O foco no cliente coloca o cliente no centro de todas as atividades e decisões do projeto, buscando entender e atender às necessidades, expectativas e objetivos do cliente, desenvolvendo soluções que atendam a essas demandas. Isso ecoa a filosofia de Platão sobre a importância da justiça e da busca pelo bem comum. Ao priorizar o cliente, a equipe se compromete a alcançar resultados que beneficiem todas as partes envolvidas e a ideia de "Code is Poetry" é refletida na busca por soluções de projeto que sejam tanto elegantes quanto eficazes, proporcionando valor ao cliente. Isso significa adaptar estratégias para atender às necessidades dos clientes e garantir que os resultados finais estejam alinhados com suas expectativas. A busca pela excelência e a satisfação do cliente são aspectos fundamentais, tanto para Platão quanto para mim que acredito na mentalidade centrada no cliente.
</p>
<figure class="slate-resizable-image-embed slate-image-embed__resize-full-width">
<img alt="No alt text provided for this image" data-media-urn="urn:li:digitalmediaAsset:D4D12AQHYafct2DqBMA" src="https://media.licdn.com/dms/image/D4D12AQHYafct2DqBMA/article-inline_image-shrink_1000_1488/0/1685619965281?e=1719446400&amp;v=beta&amp;t=TrYHstW-fHDYNufmw0HQfQfnK6QJwZYi1QZQqwrG718" />
<figcaption>
Image by iebschool
</figcaption>
</figure>
<p>
Assim como Platão enfatizava a importância da virtude e da sabedoria em todas as facetas da vida, o foco no cliente destaca a necessidade de ética e colaboração na gestão de projetos. Isso implica o desenvolvimento de habilidades de comunicação eficazes, a construção de relações de confiança com clientes e stakeholders, e a tomada de decisões baseadas em princípios éticos e morais.
</p>
<h2>
<strong>
Aplicação usando Extreme Programming (XP)
</strong>
</h2>
<p>
O Extreme Programming (XP) é uma metodologia ágil de desenvolvimento de software que enfatiza a satisfação do cliente e a adaptação às mudanças, características que ecoam a filosofia de Platão e a ideia de que "Code is Poetry".
</p>
<p>
Primeiro, o foco no cliente é uma parte essencial do XP. A metodologia defende a ideia de que os clientes devem estar intimamente envolvidos em todo o processo de desenvolvimento de software. Isso inclui fornecer
<strong>
feedback
</strong>
constante, ajudar a definir requisitos e validar as funcionalidades à medida que são desenvolvidas. Assim como a abordagem centrada no cliente, o XP busca atender às necessidades do cliente e adaptar-se continuamente às mudanças nos requisitos e expectativas.
</p>
<p>
Segundo, a busca pela excelência no código, refletida na frase "Code is Poetry", é outro princípio chave do XP. A metodologia XP valoriza um código de alta qualidade e defende práticas como programação em pares, refatoração contínua e integração contínua, para garantir que o código seja o mais eficiente, limpo e elegante possível. Isso está alinhado com a busca pela excelência na arte da programação.
</p>
<figure class="slate-resizable-image-embed slate-image-embed__resize-full-width">
<img alt="No alt text provided for this image" data-media-urn="urn:li:digitalmediaAsset:D4D12AQFHcAmEI0B5Gg" src="https://media.licdn.com/dms/image/D4D12AQFHcAmEI0B5Gg/article-inline_image-shrink_1000_1488/0/1685620529734?e=1719446400&amp;v=beta&amp;t=OafjYuZvwG6TLLSJluY2x_m2uokdQ2B1-pWilgsR8YA" />
<figcaption>
Capa de livro
</figcaption>
</figure>
<p>
Terceiro, a ideia platônica da busca pela virtude e sabedoria também pode ser vista no XP. A metodologia valoriza a comunicação, simplicidade, feedback e coragem como principais virtudes. Estes valores promovem um ambiente de trabalho ético e colaborativo, alinhado com a busca platônica pelo bem comum.
</p>
<h2>
Aplicação usando Domain Driven Design
</h2>
<p>
O Domain-Driven Design (DDD) é uma abordagem de desenvolvimento de software que se concentra no domínio do problema principal a ser resolvido e na lógica e complexidade envolvidas nisso. A filosofia de Platão, o conceito de "Code is Poetry" e a mentalidade centrada no cliente têm uma relação direta com o DDD.
</p>
<p>
Primeiro, o DDD prioriza a compreensão profunda do domínio do problema, que essencialmente se baseia na necessidade do cliente. Isso está em sintonia com o foco no cliente, pois a meta é compreender as necessidades, expectativas e objetivos do cliente, e desenvolver soluções que atendam a essas demandas. Assim como a filosofia de Platão enfatiza a justiça e a busca pelo bem comum, o DDD também se esforça para resolver o problema do domínio de uma maneira que beneficie todas as partes envolvidas.
</p>
<p>
Segundo, "Code is Poetry" e DDD compartilham a busca pela clareza e expressão precisa. O DDD incentiva a criação de um modelo de domínio bem definido e uma linguagem ubíqua - um idioma comum entre desenvolvedores e especialistas no domínio - que promovam a clareza de comunicação. Isso está alinhado com o conceito de "Code is Poetry", onde a clareza, a elegância e a eficiência do código são valorizadas.
</p>
<p>
Terceiro, a busca pela excelência é um tema comum em ambas as abordagens. No DDD, a excelência é perseguida através de um modelo de domínio rico e refletindo com precisão o domínio do problema. Isso garante que a solução final seja de alta qualidade e atenda às necessidades do cliente, ressoando com o valor que você atribui à satisfação do cliente.
</p>
<p>
A filosofia, o conceito de "Code is Poetry" e a mentalidade centrada no cliente enfatizam a ética, a colaboração e a busca pelo bem comum. O DDD, por outro lado, promove a colaboração entre especialistas do domínio e desenvolvedores, a fim de entender completamente o domínio do problema e desenvolver a solução mais eficaz. Isso está em linha com os princípios éticos e colaborativos defendidos por Platão.
</p>
<figure class="slate-resizable-image-embed slate-image-embed__resize-full-width">
<img alt="No alt text provided for this image" data-media-urn="urn:li:digitalmediaAsset:D4D12AQFLm5cd3-zHeA" src="https://media.licdn.com/dms/image/D4D12AQFLm5cd3-zHeA/article-inline_image-shrink_1000_1488/0/1685620628461?e=1719446400&amp;v=beta&amp;t=qmzflNj-ybXc-w90zEJMAQmE_2Q3f3HisRyLn6YoyJ0" />
<figcaption>
Capa de livro
</figcaption>
</figure>
<p>
<br />
</p>
<div>
<hr />
</div>
<p>
Esses valores alinham-se com a ideia platônica de buscar o bem comum e a justiça. E você, o que pensa sobre isso? Code is poetry?
</p>
</div>]]></content><author><name></name></author><category term="artigos" /><summary type="html"><![CDATA[A frase " Code is Poetry ", frequentemente usada para descrever o campo da programação e do desenvolvimento de software, simboliza a noção de que a criação de código pode ser vista como uma forma de arte e expressão criativa, assim como a poesia e quero vincular esse conceito à ideia de Platão sobre a vida ideal e também à abordagem centrada no cliente na gestão de projetos. Para Platão, os valores fundamentais da justiça, sabedoria e cumprimento do dever eram vitais em todas as esferas da vida, incluindo o trabalho. "Code is Poetry" pode ser interpretado como um apelo aos profissionais de tecnologia para buscar excelência em seu campo, onde um código bem estruturado, elegante e eficiente pode ser paralelizado com a criação de um poema bem construído, transmitindo significado, beleza e clareza. Writing Poetry GIF by Kpop46776 Assim como a poesia tem a capacidade de comunicar emoções e ideias de maneira sucinta e poderosa, o código tem o potencial de criar soluções inovadoras e eficazes para problemas complexos. Com uma abordagem criativa e detalhada, os programadores podem desenvolver programas e sistemas elegantes, funcionais e inspiradores . O foco no cliente coloca o cliente no centro de todas as atividades e decisões do projeto, buscando entender e atender às necessidades, expectativas e objetivos do cliente, desenvolvendo soluções que atendam a essas demandas. Isso ecoa a filosofia de Platão sobre a importância da justiça e da busca pelo bem comum. Ao priorizar o cliente, a equipe se compromete a alcançar resultados que beneficiem todas as partes envolvidas e a ideia de "Code is Poetry" é refletida na busca por soluções de projeto que sejam tanto elegantes quanto eficazes, proporcionando valor ao cliente. Isso significa adaptar estratégias para atender às necessidades dos clientes e garantir que os resultados finais estejam alinhados com suas expectativas. A busca pela excelência e a satisfação do cliente são aspectos fundamentais, tanto para Platão quanto para mim que acredito na mentalidade centrada no cliente. Image by iebschool Assim como Platão enfatizava a importância da virtude e da sabedoria em todas as facetas da vida, o foco no cliente destaca a necessidade de ética e colaboração na gestão de projetos. Isso implica o desenvolvimento de habilidades de comunicação eficazes, a construção de relações de confiança com clientes e stakeholders, e a tomada de decisões baseadas em princípios éticos e morais. Aplicação usando Extreme Programming (XP) O Extreme Programming (XP) é uma metodologia ágil de desenvolvimento de software que enfatiza a satisfação do cliente e a adaptação às mudanças, características que ecoam a filosofia de Platão e a ideia de que "Code is Poetry". Primeiro, o foco no cliente é uma parte essencial do XP. A metodologia defende a ideia de que os clientes devem estar intimamente envolvidos em todo o processo de desenvolvimento de software. Isso inclui fornecer feedback constante, ajudar a definir requisitos e validar as funcionalidades à medida que são desenvolvidas. Assim como a abordagem centrada no cliente, o XP busca atender às necessidades do cliente e adaptar-se continuamente às mudanças nos requisitos e expectativas. Segundo, a busca pela excelência no código, refletida na frase "Code is Poetry", é outro princípio chave do XP. A metodologia XP valoriza um código de alta qualidade e defende práticas como programação em pares, refatoração contínua e integração contínua, para garantir que o código seja o mais eficiente, limpo e elegante possível. Isso está alinhado com a busca pela excelência na arte da programação. Capa de livro Terceiro, a ideia platônica da busca pela virtude e sabedoria também pode ser vista no XP. A metodologia valoriza a comunicação, simplicidade, feedback e coragem como principais virtudes. Estes valores promovem um ambiente de trabalho ético e colaborativo, alinhado com a busca platônica pelo bem comum. Aplicação usando Domain Driven Design O Domain-Driven Design (DDD) é uma abordagem de desenvolvimento de software que se concentra no domínio do problema principal a ser resolvido e na lógica e complexidade envolvidas nisso. A filosofia de Platão, o conceito de "Code is Poetry" e a mentalidade centrada no cliente têm uma relação direta com o DDD. Primeiro, o DDD prioriza a compreensão profunda do domínio do problema, que essencialmente se baseia na necessidade do cliente. Isso está em sintonia com o foco no cliente, pois a meta é compreender as necessidades, expectativas e objetivos do cliente, e desenvolver soluções que atendam a essas demandas. Assim como a filosofia de Platão enfatiza a justiça e a busca pelo bem comum, o DDD também se esforça para resolver o problema do domínio de uma maneira que beneficie todas as partes envolvidas. Segundo, "Code is Poetry" e DDD compartilham a busca pela clareza e expressão precisa. O DDD incentiva a criação de um modelo de domínio bem definido e uma linguagem ubíqua - um idioma comum entre desenvolvedores e especialistas no domínio - que promovam a clareza de comunicação. Isso está alinhado com o conceito de "Code is Poetry", onde a clareza, a elegância e a eficiência do código são valorizadas. Terceiro, a busca pela excelência é um tema comum em ambas as abordagens. No DDD, a excelência é perseguida através de um modelo de domínio rico e refletindo com precisão o domínio do problema. Isso garante que a solução final seja de alta qualidade e atenda às necessidades do cliente, ressoando com o valor que você atribui à satisfação do cliente. A filosofia, o conceito de "Code is Poetry" e a mentalidade centrada no cliente enfatizam a ética, a colaboração e a busca pelo bem comum. O DDD, por outro lado, promove a colaboração entre especialistas do domínio e desenvolvedores, a fim de entender completamente o domínio do problema e desenvolver a solução mais eficaz. Isso está em linha com os princípios éticos e colaborativos defendidos por Platão. Capa de livro Esses valores alinham-se com a ideia platônica de buscar o bem comum e a justiça. E você, o que pensa sobre isso? Code is poetry?]]></summary></entry><entry><title type="html">A Lei de Demeter, princípio do mínimo conhecimento</title><link href="https://www.gpupo.com/lessons/a-lei-de-demeter-principio-do-minimo-conhecimento/" rel="alternate" type="text/html" title="A Lei de Demeter, princípio do mínimo conhecimento" /><published>2023-05-25T00:00:00-03:00</published><updated>2023-05-25T00:00:00-03:00</updated><id>https://www.gpupo.com/lessons/gist-a-lei-de-demeter-principio-do-minimo-conhecimento</id><content type="html" xml:base="https://www.gpupo.com/lessons/a-lei-de-demeter-principio-do-minimo-conhecimento/"><![CDATA[<p>Gist ID: 6385b8d4e27b6fb5a8bf919f44bce296</p>

<p>A Lei de Demeter, também conhecida como princípio do mínimo conhecimento, é uma diretriz para o design de objetos. Segundo essa lei, um objeto deve limitar suas interações a um número limitado de “amigos íntimos” e evitar conhecer as estruturas internas de outros objetos.</p>

<p>Vou dar um exemplo de código JavaScript que viola a Lei de Demeter e depois mostrar como corrigi-lo. No exemplo, vamos considerar um objeto Carro que tem um objeto Motor:</p>

<pre><code class="language-JS">function Carro() {
    this.motor = new Motor();
}

function Motor() {
    this.revolucoesPorMinuto = 0;
    
    this.aumentarRevolucoes = function() {
        this.revolucoesPorMinuto += 100;
    }
}
//...
$(document).ready(function() {
    var carro = new Carro();
    
    $("#botaoAcelerar").click(function() {
        carro.motor.aumentarRevolucoes();
    });
});
</code></pre>

<p>E então, modificamos o código que usa jQuery para chamar o método acelerar() do Carro, em vez de chamar diretamente o método aumentarRevolucoes() do Motor:</p>

<pre><code class="language-JS">$(document).ready(function() {
    var carro = new Carro();
    
    $("#botaoAcelerar").click(function() {
        carro.acelerar();
    });
});
</code></pre>

<p>Agora, o objeto Carro não precisa mais saber sobre a estrutura interna do objeto Motor. Isso torna o código mais fácil de entender e manter, e mais resistente a mudanças no design dos objetos.</p>

<p>Agora um exemplo mais completo:</p>

<pre><code class="language-JS">/** 
 * ### Carro fora da lei ####
 * Neste exemplo, a classe Carro está violando a Lei de Demeter ao chamar diretamente 
 * o método injetar() do BicoInjetor através do Motor e do Pistao. 
 * De acordo com a Lei de Demeter, um objeto só deve se comunicar com seus vizinhos
 *  imediatos, então Carro só deve se comunicar com Motor, e não com Pistao ou 
 * BicoInjetor.
*/

class BicoInjetor {
    injetar() {
        // Injeta combustível
        let i=0
        while(i&lt;5) {
          console.log("Tome gas!\n");
          i++;
        }
      console.log("Vrummmmmm!\n");      
    }
}

class Pistao {
    constructor() {
        this.bicoInjetor = new BicoInjetor();
    }

    mover() {
        // Move o pistão
        this.bicoInjetor.injetar();
    }
}

class Motor {
    constructor() {
        this.pistao = new Pistao();
    }

    iniciar() {
        // Inicia o motor
        this.pistao.mover();
    }
}

class Carro {
    constructor() {
        this.motor = new Motor();
    }

    ligar() {
        // Ligar o carro
        this.motor.pistao.bicoInjetor.injetar(); // Violação da Lei de Demeter
    }
}

let carro=new Carro();
carro.ligar();
console.log("Parado na Blitz do Demeter");
</code></pre>

<p>Refatorado:</p>

<pre><code class="language-JS">/** 
 * ### Carro Legal ####
 * Nesta versão refatorada, a classe Carro agora apenas se comunica com 
 * a classe Motor, que é seu vizinho imediato. Isso adere à Lei de Demeter, pois 
 * Carro não tem mais conhecimento dos detalhes internos de Pistao ou BicoInjetor.
*/

class BicoInjetor {
    injetar() {
        // Injeta combustível
        let i=0
        while(i&lt;5) {
          console.log("Tome gas!\n");
          i++;
        }
      console.log("Vrummmmmm!\n");      
    }
}
class Pistao {
    constructor() {
        this.bicoInjetor = new BicoInjetor();
    }

    mover() {
        // Move o pistão
        this.bicoInjetor.injetar();
    }
}

class Motor {
    constructor() {
        this.pistao = new Pistao();
    }

    iniciar() {
        // Inicia o motor
        this.pistao.mover();
    }
}

class Carro {
    constructor() {
        this.motor = new Motor();
    }

    ligar() {
        // Ligar o carro
        this.motor.iniciar(); // Adere à Lei de Demeter
    }
}

let carro=new Carro()
carro.ligar()
</code></pre>

<h1 id="exemplos-de-infrações-no-dia-a-dia">Exemplos de infrações no dia a dia</h1>

<p>A Lei de Demeter é frequentemente infringida quando os desenvolvedores não percebem que estão expondo muitos detalhes de um objeto para outro. Isso pode acontecer em várias situações. Aqui estão alguns exemplos:</p>

<h2 id="manipulação-de-dom-em-javascript">Manipulação de DOM em JavaScript:</h2>

<pre><code class="language-JS">document.getElementById('meuId').style.color = 'red';
</code></pre>
<p>Neste caso, estamos acessando a propriedade style do elemento DOM retornado por getElementById(‘meuId’) e então alterando a propriedade color desse objeto style. Isso é uma violação da Lei de Demeter, pois estamos navegando através de vários níveis de objetos.</p>

<h2 id="uso-de-bibliotecas-e-frameworks">Uso de bibliotecas e frameworks:</h2>

<pre><code class="language-JS">let database = firebase.database();
let ref = database.ref('meusDados');
</code></pre>

<p>Neste exemplo, estamos acessando a database de firebase e então acessando a referência a ‘meusDados’ dessa database. Novamente, isso é uma violação da Lei de Demeter, pois estamos navegando através de vários níveis de objetos.</p>

<h2 id="manipulação-de-objetos-complexos">Manipulação de objetos complexos</h2>

<pre><code class="language-JS">let valor = objeto.propriedade1.propriedade2.propriedade3;
</code></pre>

<p>Neste caso, estamos acessando propriedade1 de objeto, depois propriedade2 de propriedade1, e finalmente propriedade3 de propriedade2. Essa cadeia de acessos é uma violação clara da Lei de Demeter.</p>

<p>Embora seja tentador usar esses atalhos e eles possam tornar o código mais conciso, eles também podem tornar o código mais difícil de entender e manter. Aderir à Lei de Demeter pode resultar em código mais robusto e modularizado.</p>]]></content><author><name></name></author><category term="gist" /><summary type="html"><![CDATA[Gist ID: 6385b8d4e27b6fb5a8bf919f44bce296]]></summary></entry><entry><title type="html">DORA e SPACE- +eficácia +maturidade no desenvolvimento de software</title><link href="https://www.gpupo.com/artigos/dora-e-spaceh-+eficacia-+maturidade-no-desenvolvimento-de-software/" rel="alternate" type="text/html" title="DORA e SPACE- +eficácia +maturidade no desenvolvimento de software" /><published>2023-05-19T14:20:00-03:00</published><updated>2023-05-19T14:20:00-03:00</updated><id>https://www.gpupo.com/artigos/dora-e-spaceh-+eficacia-+maturidade-no-desenvolvimento-de-software</id><content type="html" xml:base="https://www.gpupo.com/artigos/dora-e-spaceh-+eficacia-+maturidade-no-desenvolvimento-de-software/"><![CDATA[<div>
<p>
<strong>
DORA
</strong>
(DevOps Research and Assessment) e
<strong>
SPACE
</strong>
(Software Performance and Capability Evaluation) são dois frameworks que visam avaliar e melhorar a
<strong>
eficácia
</strong>
e a
<strong>
maturidade
</strong>
das práticas de desenvolvimento de software e operações em uma organização. Embora sejam distintos, ambos têm como objetivo promover a excelência e o aprimoramento contínuo na entrega de software.
</p>
<h3>
DORA (DevOps Research and Assessment)
</h3>
<p>
O
<strong>
DORA
</strong>
é um framework desenvolvido pelo grupo de pesquisa DevOps Research and Assessment. Ele se concentra em avaliar a eficácia das práticas de DevOps em uma organização. O DORA utiliza métricas quantitativas para medir o desempenho em áreas-chave, como velocidade de entrega, estabilidade e eficiência operacional. Essas métricas fornecem insights valiosos para identificar pontos fortes e áreas de melhoria, permitindo que as equipes de desenvolvimento e operações aprimorem continuamente seus processos.
</p>
<p>
O DORA utiliza quatro métricas principais para avaliar a eficácia do DevOps:
</p>
<ul>
<li>
<strong>
Lead Time
</strong>
: mede o tempo necessário para converter uma ideia ou requisito em um código implantado em produção.
</li>
<li>
<strong>
Frequency of Deployment
</strong>
: mede a frequência com que as alterações são implantadas em produção.
</li>
<li>
<strong>
Change Failure Rate
</strong>
: mede a porcentagem de implantações que resultam em falhas ou impactos negativos no ambiente de produção.
</li>
<li>
<strong>
Time to Restore Service
</strong>
: mede o tempo necessário para restaurar o serviço em caso de falhas ou interrupções.
</li>
</ul>
<h3>
SPACE (Software Performance and Capability Evaluation):
</h3>
<p>
O
<strong>
SPACE
</strong>
é um framework desenvolvido pela Software Engineering Institute (SEI) para avaliar a capacidade e o desempenho do processo de desenvolvimento de software em uma organização. Ele fornece uma estrutura para avaliar e melhorar a maturidade dos processos de desenvolvimento, identificando áreas de melhoria e definindo metas para aprimoramento contínuo.
</p>
<p>
O framework SPACE abrange seis áreas-chave de processo:
</p>
<ul>
<li>
<strong>
Gerenciamento de requisitos
</strong>
: focado em definir, rastrear e gerenciar os requisitos do software.
</li>
<li>
<strong>
Planejamento e rastreamento do projeto
</strong>
: envolve a definição de metas, planejamento de atividades e monitoramento do progresso do projeto.
</li>
<li>
<strong>
Garantia de qualidade
</strong>
: engloba atividades de revisão, teste e garantia da qualidade do software.
</li>
<li>
<strong>
Gerenciamento de configuração
</strong>
: trata do controle de versões, rastreamento de mudanças e gerenciamento de configurações do software.
</li>
<li>
<strong>
Gerenciamento de engenharia
</strong>
: aborda atividades de design, implementação, integração e verificação do software.
</li>
<li>
<strong>
Gerenciamento de medição
</strong>
: envolve a definição e o monitoramento de métricas para medir o desempenho do processo de desenvolvimento.
</li>
</ul>
<p>
Ao avaliar a maturidade de cada área, o SPACE permite que as organizações identifiquem áreas de melhoria específicas e desenvolvam estratégias para alcançar metas de aprimoramento.
</p>
<figure class="slate-resizable-image-embed slate-image-embed__resize-full-width">
<img alt="No alt text provided for this image" data-media-urn="urn:li:digitalmediaAsset:D4D12AQGQy8KPB8clTQ" src="https://media.licdn.com/dms/image/D4D12AQGQy8KPB8clTQ/article-inline_image-shrink_1500_2232/0/1684506307517?e=1719446400&amp;v=beta&amp;t=2MNL0hvr4OF-KojcKsXLp6Rb5KmLXI8Iddcipv30-lU" />
<figcaption>
The DORA and SPACE frameworks
</figcaption>
</figure>
<p>
<br />
</p>
<p>
Tanto o DORA quanto o SPACE não são apenas ferramentas de avaliação, mas também fornecem orientações e boas práticas para melhorar os processos existentes. Eles são baseados em pesquisas e experiências comprovadas, o que os torna valiosos para as organizações que desejam alcançar níveis mais altos de desempenho e maturidade em suas operações de software.
</p>
<p>
Ao implementar esses frameworks, as organizações podem obter benefícios significativos, como:
</p>
<ol>
<li>
<strong>
Identificação de áreas de melhoria
</strong>
: Os frameworks permitem uma análise detalhada das práticas de desenvolvimento e operações, destacando áreas específicas que precisam ser aprimoradas. Isso permite que as equipes se concentrem em aspectos cruciais para alcançar resultados melhores.
</li>
<li>
<strong>
Alinhamento de objetivos
</strong>
: Ao avaliar a maturidade e o desempenho, os frameworks ajudam as equipes a alinhar seus objetivos com as melhores práticas e padrões do setor. Isso cria uma visão compartilhada e permite um progresso consistente em direção a metas comuns.
</li>
<li>
<strong>
Melhoria contínua
</strong>
: Os frameworks incentivam uma cultura de melhoria contínua, fornecendo métricas e indicadores para acompanhar o progresso ao longo do tempo. Isso permite que as equipes monitorem seu desempenho, identifiquem tendências e tomem medidas proativas para aprimorar suas operações.
</li>
<li>
<strong>
Aumento da eficiência e qualidade
</strong>
: Ao implementar as práticas recomendadas pelos frameworks, as organizações podem aumentar a eficiência em seus processos de desenvolvimento e operações, reduzindo o tempo de ciclo e melhorando a qualidade do software entregue.
</li>
<li>
<strong>
Maior agilidade e capacidade de resposta
</strong>
: Com práticas de DevOps mais maduras e um melhor alinhamento entre as equipes de desenvolvimento e operações, as organizações podem responder mais rapidamente às demandas do mercado, implantar alterações com maior frequência e reduzir o tempo de lançamento de novos recursos e funcionalidades.
</li>
</ol>
<p>
Tanto o DORA quanto o SPACE são frameworks valiosos para avaliar e melhorar as práticas de desenvolvimento de software e operações. Eles fornecem uma estrutura sólida para impulsionar a excelência e promover uma cultura de melhoria contínua nas organizações. Ao implementar esses frameworks, as empresas podem obter benefícios significativos em termos de eficiência, qualidade, agilidade e capacidade de resposta.
</p>
<p>
Alguns exemplos de fontes que podem fornecer informações mais detalhadas sobre esses frameworks incluem:
</p>
<ol>
<li>
Livro: "
<strong>
Accelerate: The Science of Lean Software and DevOps
</strong>
: Building and Scaling High Performing Technology Organizations" de Nicole Forsgren, Jez Humble e Gene Kim.
</li>
<li>
Artigo: "
<strong>
The DORA DevOps Research Program
</strong>
" por Nicole Forsgren, Jez Humble, Nigel Kersten e Gene Kim.
</li>
<li>
Artigo: "
<strong>
Measuring Software Process Improvement Impact
</strong>
: A Review of Empirical Studies Using the Software Capability Maturity Model" por Jürgen Münch e Frank Padberg.
</li>
<li>
Documento do SEI: "
<strong>
Software Performance and Capability Evaluation (SPACE) Method Description Document
</strong>
" publicado pelo Software Engineering Institute.
</li>
</ol>
<p>
<br />
</p>
</div>]]></content><author><name></name></author><category term="artigos" /><summary type="html"><![CDATA[DORA (DevOps Research and Assessment) e SPACE (Software Performance and Capability Evaluation) são dois frameworks que visam avaliar e melhorar a eficácia e a maturidade das práticas de desenvolvimento de software e operações em uma organização. Embora sejam distintos, ambos têm como objetivo promover a excelência e o aprimoramento contínuo na entrega de software. DORA (DevOps Research and Assessment) O DORA é um framework desenvolvido pelo grupo de pesquisa DevOps Research and Assessment. Ele se concentra em avaliar a eficácia das práticas de DevOps em uma organização. O DORA utiliza métricas quantitativas para medir o desempenho em áreas-chave, como velocidade de entrega, estabilidade e eficiência operacional. Essas métricas fornecem insights valiosos para identificar pontos fortes e áreas de melhoria, permitindo que as equipes de desenvolvimento e operações aprimorem continuamente seus processos. O DORA utiliza quatro métricas principais para avaliar a eficácia do DevOps: Lead Time : mede o tempo necessário para converter uma ideia ou requisito em um código implantado em produção. Frequency of Deployment : mede a frequência com que as alterações são implantadas em produção. Change Failure Rate : mede a porcentagem de implantações que resultam em falhas ou impactos negativos no ambiente de produção. Time to Restore Service : mede o tempo necessário para restaurar o serviço em caso de falhas ou interrupções. SPACE (Software Performance and Capability Evaluation): O SPACE é um framework desenvolvido pela Software Engineering Institute (SEI) para avaliar a capacidade e o desempenho do processo de desenvolvimento de software em uma organização. Ele fornece uma estrutura para avaliar e melhorar a maturidade dos processos de desenvolvimento, identificando áreas de melhoria e definindo metas para aprimoramento contínuo. O framework SPACE abrange seis áreas-chave de processo: Gerenciamento de requisitos : focado em definir, rastrear e gerenciar os requisitos do software. Planejamento e rastreamento do projeto : envolve a definição de metas, planejamento de atividades e monitoramento do progresso do projeto. Garantia de qualidade : engloba atividades de revisão, teste e garantia da qualidade do software. Gerenciamento de configuração : trata do controle de versões, rastreamento de mudanças e gerenciamento de configurações do software. Gerenciamento de engenharia : aborda atividades de design, implementação, integração e verificação do software. Gerenciamento de medição : envolve a definição e o monitoramento de métricas para medir o desempenho do processo de desenvolvimento. Ao avaliar a maturidade de cada área, o SPACE permite que as organizações identifiquem áreas de melhoria específicas e desenvolvam estratégias para alcançar metas de aprimoramento. The DORA and SPACE frameworks Tanto o DORA quanto o SPACE não são apenas ferramentas de avaliação, mas também fornecem orientações e boas práticas para melhorar os processos existentes. Eles são baseados em pesquisas e experiências comprovadas, o que os torna valiosos para as organizações que desejam alcançar níveis mais altos de desempenho e maturidade em suas operações de software. Ao implementar esses frameworks, as organizações podem obter benefícios significativos, como: Identificação de áreas de melhoria : Os frameworks permitem uma análise detalhada das práticas de desenvolvimento e operações, destacando áreas específicas que precisam ser aprimoradas. Isso permite que as equipes se concentrem em aspectos cruciais para alcançar resultados melhores. Alinhamento de objetivos : Ao avaliar a maturidade e o desempenho, os frameworks ajudam as equipes a alinhar seus objetivos com as melhores práticas e padrões do setor. Isso cria uma visão compartilhada e permite um progresso consistente em direção a metas comuns. Melhoria contínua : Os frameworks incentivam uma cultura de melhoria contínua, fornecendo métricas e indicadores para acompanhar o progresso ao longo do tempo. Isso permite que as equipes monitorem seu desempenho, identifiquem tendências e tomem medidas proativas para aprimorar suas operações. Aumento da eficiência e qualidade : Ao implementar as práticas recomendadas pelos frameworks, as organizações podem aumentar a eficiência em seus processos de desenvolvimento e operações, reduzindo o tempo de ciclo e melhorando a qualidade do software entregue. Maior agilidade e capacidade de resposta : Com práticas de DevOps mais maduras e um melhor alinhamento entre as equipes de desenvolvimento e operações, as organizações podem responder mais rapidamente às demandas do mercado, implantar alterações com maior frequência e reduzir o tempo de lançamento de novos recursos e funcionalidades. Tanto o DORA quanto o SPACE são frameworks valiosos para avaliar e melhorar as práticas de desenvolvimento de software e operações. Eles fornecem uma estrutura sólida para impulsionar a excelência e promover uma cultura de melhoria contínua nas organizações. Ao implementar esses frameworks, as empresas podem obter benefícios significativos em termos de eficiência, qualidade, agilidade e capacidade de resposta. Alguns exemplos de fontes que podem fornecer informações mais detalhadas sobre esses frameworks incluem: Livro: " Accelerate: The Science of Lean Software and DevOps : Building and Scaling High Performing Technology Organizations" de Nicole Forsgren, Jez Humble e Gene Kim. Artigo: " The DORA DevOps Research Program " por Nicole Forsgren, Jez Humble, Nigel Kersten e Gene Kim. Artigo: " Measuring Software Process Improvement Impact : A Review of Empirical Studies Using the Software Capability Maturity Model" por Jürgen Münch e Frank Padberg. Documento do SEI: " Software Performance and Capability Evaluation (SPACE) Method Description Document " publicado pelo Software Engineering Institute.]]></summary></entry><entry><title type="html">27 Perguntas valiosas para fazer ao recrutador durante a entrevista</title><link href="https://www.gpupo.com/artigos/27-perguntas-valiosas-para-fazer-ao-recrutador-durante-a-entrevista/" rel="alternate" type="text/html" title="27 Perguntas valiosas para fazer ao recrutador durante a entrevista" /><published>2023-05-18T10:44:00-03:00</published><updated>2023-05-18T10:44:00-03:00</updated><id>https://www.gpupo.com/artigos/27-perguntas-valiosas-para-fazer-ao-recrutador-durante-a-entrevista</id><content type="html" xml:base="https://www.gpupo.com/artigos/27-perguntas-valiosas-para-fazer-ao-recrutador-durante-a-entrevista/"><![CDATA[<div>
<p>
Uma entrevista de emprego é uma oportunidade valiosa para candidatos e empresas. Além de avaliar se o salário oferecido é adequado às necessidades financeiras, o candidato pode aproveitar esse momento para conhecer melhor a empresa, o ambiente de trabalho e determinar se a cultura organizacional está alinhada com suas expectativas e valores.
</p>
<figure class="slate-resizable-image-embed slate-image-embed__resize-full-width">
<img alt="No alt text provided for this image" data-media-urn="urn:li:digitalmediaAsset:D4D12AQGmugv4an5LZA" src="https://media.licdn.com/dms/image/D4D12AQGmugv4an5LZA/article-inline_image-shrink_400_744/0/1684407049312?e=1719446400&amp;v=beta&amp;t=MJm2CDq2jkXKToAxkhYwGxCM59D5EIisr1t9ojZdA0E" />
<figcaption>
Filme Milk
</figcaption>
</figure>
<p>
<br />
</p>
<p>
Como recrutador, reconheço a importância de oferecer aos candidatos a oportunidade de me entrevistar. Valorizo essa etapa do processo seletivo, pois acredito que é uma maneira significativa de os candidatos conhecerem mais sobre a empresa e o cargo.
</p>
<p>
Com o intuito de auxiliar os candidatos a obterem o máximo proveito dessa oportunidade, gostaria de ajudá-los a formular as seguintes perguntas:
</p>
<ol>
<li>
Como a empresa promove a diversidade e a inclusão? Quais são as medidas adotadas para garantir um ambiente inclusivo e diversificado?
</li>
<li>
Quais são os valores centrais da empresa e como eles são aplicados diariamente na prática?
</li>
<li>
Como a empresa lida com erros e fracassos? Existe uma cultura de aprendizado com base em erros e como são incentivadas as lições aprendidas?
</li>
<li>
Como é o feedback e o reconhecimento de desempenho na empresa? Quais são os mecanismos utilizados para fornecer feedback construtivo e incentivar o reconhecimento?
</li>
<li>
Qual é o processo de gestão de produto na empresa? Como as ideias são geradas, validadas e transformadas em produtos/serviços?
</li>
<li>
Como a empresa define as prioridades das atividades? Quais critérios são considerados na tomada de decisão para estabelecer o que deve ser feito primeiro?
</li>
<li>
Como são definidos e gerenciados os prazos dos projetos? Quais práticas são adotadas para garantir a entrega dentro dos prazos estabelecidos?
</li>
<li>
Qual é o papel da equipe de produto na definição e acompanhamento das etapas? Como a equipe contribui para o planejamento e execução dos projetos?
</li>
<li>
Como a empresa lida com mudanças de escopo e atrasos nos projetos? Quais abordagens são adotadas para lidar com imprevistos e garantir a conclusão bem-sucedida dos projetos?
</li>
<li>
Como a empresa promove a autonomia e a tomada de decisão? Quais são os níveis de autonomia concedidos aos funcionários e como são incentivadas as decisões responsáveis?
</li>
<li>
Como é a comunicação entre os membros da equipe e com outras áreas da empresa? Quais são os canais e práticas utilizados para garantir uma comunicação eficiente e colaborativa?
</li>
<li>
Como são definidos os objetivos e metas dos funcionários? Existe um processo estruturado para estabelecer metas individuais e alinhá-las aos objetivos da empresa?
</li>
<li>
Como a empresa lida com o equilíbrio entre autonomia e responsabilidade dos funcionários? Como são incentivados a assumir responsabilidades sem sobrecarga?
</li>
<li>
Como são definidas as áreas e equipes da empresa? Quais critérios são considerados na formação das equipes e divisão de áreas de atuação?
</li>
<li>
Como é a comunicação e colaboração entre as áreas da empresa? Quais práticas são adotadas para promover a cooperação e o compartilhamento de conhecimento entre diferentes equipes?
</li>
<li>
Como a empresa lida com mudanças na estrutura organizacional? Como são comunicadas e implementadas as mudanças que afetam a estrutura da empresa?
</li>
<li>
Quais são os critérios e o perfil desejado pela empresa para preencher essa vaga? Quais habilidades e competências são valorizadas?
</li>
<li>
Quais são as oportunidades de aprendizado e desenvolvimento na vaga? Como a empresa apoia o crescimento profissional e pessoal dos seus funcionários?
</li>
<li>
Quais são os programas de treinamento e capacitação disponíveis para os funcionários? Como a empresa investe no desenvolvimento de habilidades e conhecimentos?
</li>
<li>
Existe algum programa de mentoria ou coaching para apoiar o crescimento profissional dos funcionários? Como é estruturado e como os funcionários podem se beneficiar dele?
</li>
<li>
A empresa oferece suporte para participação em eventos, conferências ou workshops relacionados à área de atuação dos funcionários? Como é incentivada a busca por conhecimento externo?
</li>
<li>
Existem oportunidades de rotação de cargos ou projetos para os funcionários? Como a empresa promove a diversificação de experiências e o desenvolvimento de novas habilidades?
</li>
<li>
A empresa incentiva a busca por certificações ou diplomas adicionais relacionados ao campo de atuação dos funcionários? Como são reconhecidos e valorizados esses esforços?
</li>
<li>
Há alguma política de reembolso de despesas educacionais para os funcionários que desejam realizar cursos ou programas de graduação ou pós-graduação?
</li>
<li>
A empresa promove a criação de comunidades internas de aprendizado, onde os funcionários podem compartilhar conhecimentos e experiências?
</li>
<li>
Existe algum sistema de avaliação de desempenho que inclua metas de aprendizado e desenvolvimento? Como a empresa acompanha o progresso individual nessa área?
</li>
<li>
A empresa possui programas de reconhecimento ou promoção interna baseados no desenvolvimento contínuo dos funcionários?
</li>
</ol>
<p>
Aproveite essa oportunidade para obter informações relevantes, esclarecer dúvidas e mostrar seu interesse pelo cargo e pela empresa.
</p>
<p>
Boa sorte em suas entrevistas futuras!
</p>
</div>]]></content><author><name></name></author><category term="artigos" /><summary type="html"><![CDATA[Uma entrevista de emprego é uma oportunidade valiosa para candidatos e empresas. Além de avaliar se o salário oferecido é adequado às necessidades financeiras, o candidato pode aproveitar esse momento para conhecer melhor a empresa, o ambiente de trabalho e determinar se a cultura organizacional está alinhada com suas expectativas e valores. Filme Milk Como recrutador, reconheço a importância de oferecer aos candidatos a oportunidade de me entrevistar. Valorizo essa etapa do processo seletivo, pois acredito que é uma maneira significativa de os candidatos conhecerem mais sobre a empresa e o cargo. Com o intuito de auxiliar os candidatos a obterem o máximo proveito dessa oportunidade, gostaria de ajudá-los a formular as seguintes perguntas: Como a empresa promove a diversidade e a inclusão? Quais são as medidas adotadas para garantir um ambiente inclusivo e diversificado? Quais são os valores centrais da empresa e como eles são aplicados diariamente na prática? Como a empresa lida com erros e fracassos? Existe uma cultura de aprendizado com base em erros e como são incentivadas as lições aprendidas? Como é o feedback e o reconhecimento de desempenho na empresa? Quais são os mecanismos utilizados para fornecer feedback construtivo e incentivar o reconhecimento? Qual é o processo de gestão de produto na empresa? Como as ideias são geradas, validadas e transformadas em produtos/serviços? Como a empresa define as prioridades das atividades? Quais critérios são considerados na tomada de decisão para estabelecer o que deve ser feito primeiro? Como são definidos e gerenciados os prazos dos projetos? Quais práticas são adotadas para garantir a entrega dentro dos prazos estabelecidos? Qual é o papel da equipe de produto na definição e acompanhamento das etapas? Como a equipe contribui para o planejamento e execução dos projetos? Como a empresa lida com mudanças de escopo e atrasos nos projetos? Quais abordagens são adotadas para lidar com imprevistos e garantir a conclusão bem-sucedida dos projetos? Como a empresa promove a autonomia e a tomada de decisão? Quais são os níveis de autonomia concedidos aos funcionários e como são incentivadas as decisões responsáveis? Como é a comunicação entre os membros da equipe e com outras áreas da empresa? Quais são os canais e práticas utilizados para garantir uma comunicação eficiente e colaborativa? Como são definidos os objetivos e metas dos funcionários? Existe um processo estruturado para estabelecer metas individuais e alinhá-las aos objetivos da empresa? Como a empresa lida com o equilíbrio entre autonomia e responsabilidade dos funcionários? Como são incentivados a assumir responsabilidades sem sobrecarga? Como são definidas as áreas e equipes da empresa? Quais critérios são considerados na formação das equipes e divisão de áreas de atuação? Como é a comunicação e colaboração entre as áreas da empresa? Quais práticas são adotadas para promover a cooperação e o compartilhamento de conhecimento entre diferentes equipes? Como a empresa lida com mudanças na estrutura organizacional? Como são comunicadas e implementadas as mudanças que afetam a estrutura da empresa? Quais são os critérios e o perfil desejado pela empresa para preencher essa vaga? Quais habilidades e competências são valorizadas? Quais são as oportunidades de aprendizado e desenvolvimento na vaga? Como a empresa apoia o crescimento profissional e pessoal dos seus funcionários? Quais são os programas de treinamento e capacitação disponíveis para os funcionários? Como a empresa investe no desenvolvimento de habilidades e conhecimentos? Existe algum programa de mentoria ou coaching para apoiar o crescimento profissional dos funcionários? Como é estruturado e como os funcionários podem se beneficiar dele? A empresa oferece suporte para participação em eventos, conferências ou workshops relacionados à área de atuação dos funcionários? Como é incentivada a busca por conhecimento externo? Existem oportunidades de rotação de cargos ou projetos para os funcionários? Como a empresa promove a diversificação de experiências e o desenvolvimento de novas habilidades? A empresa incentiva a busca por certificações ou diplomas adicionais relacionados ao campo de atuação dos funcionários? Como são reconhecidos e valorizados esses esforços? Há alguma política de reembolso de despesas educacionais para os funcionários que desejam realizar cursos ou programas de graduação ou pós-graduação? A empresa promove a criação de comunidades internas de aprendizado, onde os funcionários podem compartilhar conhecimentos e experiências? Existe algum sistema de avaliação de desempenho que inclua metas de aprendizado e desenvolvimento? Como a empresa acompanha o progresso individual nessa área? A empresa possui programas de reconhecimento ou promoção interna baseados no desenvolvimento contínuo dos funcionários? Aproveite essa oportunidade para obter informações relevantes, esclarecer dúvidas e mostrar seu interesse pelo cargo e pela empresa. Boa sorte em suas entrevistas futuras!]]></summary></entry><entry><title type="html">Bash, um interpretador de comandos para sistemas operacionais Unix</title><link href="https://www.gpupo.com/lessons/bash-um-interpretador-de-comandos-para-sistemas-operacionais-unix/" rel="alternate" type="text/html" title="Bash, um interpretador de comandos para sistemas operacionais Unix" /><published>2023-05-16T00:00:00-03:00</published><updated>2023-05-16T00:00:00-03:00</updated><id>https://www.gpupo.com/lessons/gist-bash-um-interpretador-de-comandos-para-sistemas-operacionais-unix</id><content type="html" xml:base="https://www.gpupo.com/lessons/bash-um-interpretador-de-comandos-para-sistemas-operacionais-unix/"><![CDATA[<p>Gist ID: 06e0ee5372a9253b93e532cdf34b742c</p>

<h1 id="bash-um-interpretador-de-comandos-para-sistemas-operacionais-unix">Bash, um interpretador de comandos para sistemas operacionais Unix</h1>

<p>Criei um documento para uso nas minhas aulas sobre <em>Programação com foco em componentes de infraestrutura</em>. É uma síntese de tópicos importantes que espero que seja útil para você.</p>

<p>Fique à vontade para explorar o conteúdo e utilize-o como um guia durante as aulas. 
Espero que aproveite e tenha uma ótima experiência de aprendizado!</p>

<p>O Bash (Bourne Again SHell) é um interpretador de comandos para sistemas operacionais Unix, como Linux e macOS. Ele fornece uma interface de linha de comando poderosa e flexível, permitindo que os usuários executem comandos e automatizem tarefas no sistema operacional.</p>

<h3 id="programação-procedural">Programação procedural</h3>

<p>A programação procedural é baseada na execução sequencial de instruções, onde o programa é dividido em funções ou procedimentos que manipulam dados. Nesse paradigma, o foco está na estrutura do programa, com ênfase nas ações e procedimentos a serem realizados.</p>

<h3 id="utilidades-do-bash-na-infraestrutura-de-ti">Utilidades do Bash na infraestrutura de TI</h3>

<ul>
  <li>Automatizar o provisionamento de servidores e configuração de serviços.</li>
  <li>Realizar backups e restauração de dados.</li>
  <li>Monitorar e gerenciar servidores e redes.</li>
  <li>Executar comandos remotos em vários sistemas.</li>
  <li>Coletar e analisar dados de log.</li>
  <li>Realizar integração e entrega contínua (CI/CD).</li>
</ul>

<p>O Bash é amplamente suportado em sistemas operacionais Unix e Linux, tornando-o uma escolha popular para a automação de tarefas de infraestrutura de TI.</p>

<h3 id="diferenças-entre-o-bash-e-outras-linguagens-de-programação">Diferenças entre o Bash e outras linguagens de programação.</h3>

<p>O Bash é uma linguagem de script do shell Unix, voltada principalmente para automação de tarefas no ambiente de linha de comando. Ao contrário de outras linguagens de programação, como Python ou Java, o Bash é interpretado em vez de ser compilado. Ele possui recursos específicos para interagir com o sistema operacional e executar comandos. Além disso, o Bash possui uma sintaxe mais simples e direta, focada em manipulação de texto e execução de comandos do sistema, enquanto outras linguagens de programação são mais versáteis e abrangem uma ampla gama de aplicações, como desenvolvimento web, ciência de dados e aplicativos de desktop.</p>

<h3 id="uso-de-source-e-funções-no-terminal-unix">Uso de <code>source</code> e funções no terminal Unix.</h3>

<p>No terminal Unix, o comando source é usado para executar um arquivo de script no contexto atual do shell, permitindo que as variáveis e funções definidas no arquivo sejam acessadas no terminal. Por exemplo, ao executar source arquivo.sh, as funções declaradas no “arquivo.sh” estarão disponíveis para uso imediato. As funções no terminal Unix são blocos de código reutilizáveis que podem ser definidos usando a sintaxe nome_da_funcao() { comandos }. Elas permitem agrupar comandos relacionados e executá-los facilmente, tornando o trabalho no terminal mais eficiente e organizado.</p>

<h3 id="variáveis-de-ambiente-declaração-atribuição-e-utilização-de-variáveis-no-bash">Variáveis de ambiente: declaração, atribuição e utilização de variáveis no Bash.</h3>

<p>No Bash, as variáveis de ambiente podem ser declaradas e atribuídas da seguinte forma: VARIAVEL=valor. Para acessar o valor de uma variável, utiliza-se o prefixo $, por exemplo: $VARIAVEL. É possível definir variáveis de ambiente no arquivo .bashrc ou no momento da execução do script usando o comando export VARIAVEL=valor. Para exibir o valor de uma variável, usa-se o comando echo $VARIAVEL. As variáveis de ambiente são úteis para armazenar informações como caminhos de diretórios, configurações e outros dados que podem ser acessados em diferentes partes do sistema.</p>

<h3 id="permissões-de-execução-chmod-chown-chgrp">Permissões de execução (chmod, chown, chgrp).</h3>

<p>As permissões de execução dos arquivos com scripts Bash são importantes para controlar quem pode executar esses scripts. O comando chmod é usado para definir as permissões de um arquivo. Por exemplo, chmod +x script.sh concede permissão de execução ao arquivo “script.sh”. O comando chown permite alterar o proprietário de um arquivo, enquanto chgrp permite alterar o grupo do arquivo. Por exemplo, chown user script.sh atribui o proprietário “user” ao arquivo. As permissões de execução são essenciais para garantir que os scripts Bash sejam executados apenas por usuários autorizados, reforçando a segurança e o controle de acesso aos arquivos.</p>

<p>Um exemplo de programa em Bash</p>

<pre><code class="language-bash">#!/bin/bash

# Constantes
readonly PI=3.14159
readonly GREETING="Olá, bem-vindo(a)!"

# Função para calcular a área de um círculo
# Parâmetro: raio do círculo
# Retorna: área do círculo
calculate_area() {
  local radius=$1
  local area=$(echo "scale=2; $PI * $radius * $radius" | bc)
  echo "A área do círculo com raio $radius é: $area"
}

# Função para cumprimentar o usuário
greet_user() {
  echo "$GREETING"
  echo "Qual é o seu nome?"
  read name
  echo "Olá, $name! É um prazer conhecê-lo(a)."
}

# Função principal
main() {
  greet_user
  echo "Vamos calcular a área de um círculo."
  echo "Por favor, informe o raio do círculo:"
  read radius
  calculate_area $radius
}

# Chamada da função principal
main

</code></pre>

<p>Este programa em Bash apresenta as seguintes características:</p>

<p>Define duas constantes: PI e GREETING.
Implementa duas funções: calculate_area para calcular a área de um círculo com base no raio fornecido e greet_user para cumprimentar o usuário e solicitar seu nome.
A função main é a função principal que chama as outras funções.
O programa solicita ao usuário que forneça o raio do círculo e, em seguida, calcula e exibe a área do círculo com base no raio fornecido.</p>

<h2 id="sugestão-de-leitura">Sugestão de leitura:</h2>

<ul>
  <li>“The Linux Command Line” de William Shotts, disponível gratuitamente em http://linuxcommand.org/tlcl.php.</li>
</ul>

<h2 id="tutoriais-online-interativos-para-praticar-bash">Tutoriais online interativos para praticar Bash:</h2>

<ul>
  <li>https://www.learnshell.org/</li>
  <li>https://www.shellscript.sh/</li>
</ul>

<p><strong>Comment by gpupo:</strong></p>

<h2 id="desafio-earned-a-badge">Desafio Earned a badge:</h2>

<h3 id="linkedin-bash-assessment">Linkedin Bash assessment</h3>
<p>https://www.linkedin.com/help/linkedin/answer/a513320</p>

<p>A funcionalidade LinkedIn Skill Assessments feature permite demonstrar seu conhecimento nas habilidades que você adicionou ao seu perfil.</p>

<p>Os tópicos na avaliação de Bash incluem:</p>

<ul>
  <li>Operators</li>
  <li>Scripting</li>
  <li>Expansion</li>
  <li>Environment</li>
  <li>Constructs</li>
  <li>Data Structures</li>
  <li>Commands</li>
  <li>Access Control</li>
  <li>Bash Commands</li>
  <li>Pattern Matching</li>
</ul>

<p><strong>Comment by gpupo:</strong></p>

<p>Um exemplo simples: REMOVE all branches local and remote, except master banch
https://gist.github.com/gpupo/ba16de62edde71ac850a98ce41a2d47e</p>

<p><strong>Comment by gpupo:</strong></p>

<p>Algumas funções um pouco mais complexas no meu repositório <strong>kakashi</strong>  https://github.com/gpupo/kakashi/tree/master/src/flood-monitor</p>

<p><strong>Comment by gpupo:</strong></p>

<p>Mais alguns arquivos para compilação kakashi (2015)  https://github.com/gpupo/kakashi/tree/master/bin</p>

<p><strong>Comment by gpupo:</strong></p>

<p><a href="https://github.com/gpupo/container-orchestration">container-orchestration</a>
https://github.com/gpupo/container-orchestration/tree/master/bin</p>]]></content><author><name></name></author><category term="gist" /><summary type="html"><![CDATA[Gist ID: 06e0ee5372a9253b93e532cdf34b742c]]></summary></entry></feed>